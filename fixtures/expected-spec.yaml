openapi: 3.0.1
info:
  title: 'Apie-lib generated OpenAPI spec'
  version: 1.0.0
paths:
  /UserWithAddress:
    post:
      tags:
        - UserWithAddress
        - resource
      description: 'Creates an instance of UserWithAddress'
      operationId: post-UserWithAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWithAddress-post'
      responses:
        '201':
          description: 'Resource was created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithAddress-get'
        '400':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '405':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '406':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '422':
          description: 'A validation error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException-get'
        '409':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
    get:
      tags:
        - UserWithAddress
        - resource
      description: 'Gets a list of resource that are an instance of UserWithAddress'
      operationId: get-all-UserWithAddress
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - totalCount
                  - first
                  - last
                  - list
                type: object
                properties:
                  totalCount:
                    type: integer
                  first:
                    type: string
                    format: uri
                  last:
                    type: string
                    format: uri
                  prev:
                    type: string
                    format: uri
                  next:
                    type: string
                    format: uri
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserWithAddress-get'
  /UserWithAutoincrementKey:
    post:
      tags:
        - UserWithAutoincrementKey
        - resource
      description: 'Creates an instance of UserWithAutoincrementKey'
      operationId: post-UserWithAutoincrementKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWithAutoincrementKey-post'
      responses:
        '201':
          description: 'Resource was created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithAutoincrementKey-get'
        '400':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '405':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '406':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '422':
          description: 'A validation error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException-get'
        '409':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
    get:
      tags:
        - UserWithAutoincrementKey
        - resource
      description: 'Gets a list of resource that are an instance of UserWithAutoincrementKey'
      operationId: get-all-UserWithAutoincrementKey
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - totalCount
                  - first
                  - last
                  - list
                type: object
                properties:
                  totalCount:
                    type: integer
                  first:
                    type: string
                    format: uri
                  last:
                    type: string
                    format: uri
                  prev:
                    type: string
                    format: uri
                  next:
                    type: string
                    format: uri
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserWithAutoincrementKey-get'
  /Order:
    post:
      tags:
        - Order
        - resource
      description: 'Creates an instance of Order'
      operationId: post-Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order-post'
      responses:
        '201':
          description: 'Resource was created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order-get'
        '400':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '405':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '406':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '422':
          description: 'A validation error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException-get'
        '409':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
    get:
      tags:
        - Order
        - resource
      description: 'Gets a list of resource that are an instance of Order'
      operationId: get-all-Order
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - totalCount
                  - first
                  - last
                  - list
                type: object
                properties:
                  totalCount:
                    type: integer
                  first:
                    type: string
                    format: uri
                  last:
                    type: string
                    format: uri
                  prev:
                    type: string
                    format: uri
                  next:
                    type: string
                    format: uri
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order-get'
  '/UserWithAddress/{id}':
    get:
      tags:
        - UserWithAddress
        - resource
      description: 'Gets a resource of UserWithAddress with a specific id'
      operationId: get-single-UserWithAddress
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of UserWithAddress'
          required: true
          schema:
            $ref: '#/components/schemas/UserWithAddressIdentifier-post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithAddress-get'
        '404':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
    patch:
      tags:
        - UserWithAddress
        - resource
      description: 'Modifies an instance of UserWithAddress'
      operationId: patch-single-UserWithAddress
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of UserWithAddress'
          required: true
          schema:
            $ref: '#/components/schemas/UserWithAddressIdentifier-post'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWithAddress-patch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithAddress-get'
        '400':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '405':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '406':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '422':
          description: 'A validation error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException-get'
        '409':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
  '/UserWithAutoincrementKey/{id}':
    get:
      tags:
        - UserWithAutoincrementKey
        - resource
      description: 'Gets a resource of UserWithAutoincrementKey with a specific id'
      operationId: get-single-UserWithAutoincrementKey
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of UserWithAutoincrementKey'
          required: true
          schema:
            $ref: '#/components/schemas/UserAutoincrementIdentifier-post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithAutoincrementKey-get'
        '404':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
    patch:
      tags:
        - UserWithAutoincrementKey
        - resource
      description: 'Modifies an instance of UserWithAutoincrementKey'
      operationId: patch-single-UserWithAutoincrementKey
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of UserWithAutoincrementKey'
          required: true
          schema:
            $ref: '#/components/schemas/UserAutoincrementIdentifier-post'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWithAutoincrementKey-patch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithAutoincrementKey-get'
        '400':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '405':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '406':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '422':
          description: 'A validation error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException-get'
        '409':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
  '/Order/{id}':
    get:
      tags:
        - Order
        - resource
      description: 'Gets a resource of Order with a specific id'
      operationId: get-single-Order
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of Order'
          required: true
          schema:
            $ref: '#/components/schemas/OrderIdentifier-post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order-get'
        '404':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
  /StaticActionExample/secretCode:
    get:
      tags:
        - StaticActionExample
        - action
      description: 'Calls method secretCode and returns return value.'
      operationId: call-method-StaticActionExample-secretCode
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmutableStringOrIntList-get'
  '/UserWithAddress/{id}/verifyAuthentication':
    post:
      tags:
        - UserWithAddress
        - action
      description: 'Runs method verifyAuthentication on a UserWithAddress with a specific id'
      operationId: get-single-UserWithAddress-run-verifyAuthentication
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of UserWithAddress'
          required: true
          schema:
            $ref: '#/components/schemas/UserWithAddressIdentifier-post'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - username
                - password
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '405':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '406':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '422':
          description: 'A validation error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException-get'
        '404':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
  '/Order/{id}/orderLine':
    post:
      tags:
        - Order
        - action
      description: 'Adds orderLine to Order'
      operationId: get-single-Order-run-addOrderLine
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of Order'
          required: true
          schema:
            $ref: '#/components/schemas/OrderIdentifier-post'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - orderLines
              type: object
              properties:
                orderLines:
                  type: array
                  items:
                    $ref: '#/components/schemas/OrderLine-post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order-get'
        '400':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '405':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '406':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '422':
          description: 'A validation error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException-get'
        '404':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
    delete:
      tags:
        - Order
        - action
      description: 'Removes orderLine from Order'
      operationId: get-single-Order-run-removeOrderLine
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of Order'
          required: true
          schema:
            $ref: '#/components/schemas/OrderIdentifier-post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order-get'
        '400':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '405':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '406':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '422':
          description: 'A validation error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException-get'
        '404':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
  '/Order/{id}/acceptOrder':
    get:
      tags:
        - Order
        - action
      description: 'Runs method acceptOrder on a Order with a specific id'
      operationId: get-single-Order-run-acceptOrder
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of Order'
          required: true
          schema:
            $ref: '#/components/schemas/OrderIdentifier-post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order-get'
        '404':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
servers:
  -
    url: /test
  -
    url: 'http://localhost//test'
components:
  schemas:
    AddressWithZipcodeCheck-get:
      type: object
      required:
        - street
        - streetNumber
        - zipcode
        - city
      properties:
        street:
          $ref: '#/components/schemas/DatabaseText-get'
        streetNumber:
          $ref: '#/components/schemas/DatabaseText-get'
        zipcode:
          $ref: '#/components/schemas/DatabaseText-get'
        city:
          $ref: '#/components/schemas/DatabaseText-get'
    AddressWithZipcodeCheck-post:
      type: object
      required:
        - street
        - streetNumber
        - zipcode
        - city
      properties:
        street:
          $ref: '#/components/schemas/DatabaseText-post'
        streetNumber:
          $ref: '#/components/schemas/DatabaseText-post'
        zipcode:
          $ref: '#/components/schemas/DatabaseText-post'
        city:
          $ref: '#/components/schemas/DatabaseText-post'
    DatabaseText-get:
      maxLength: 65535
      minLength: 0
      type: string
      example: 'Lorem Ipsum'
    DatabaseText-post:
      maxLength: 65535
      minLength: 0
      type: string
      example: 'Lorem Ipsum'
    ImmutableStringOrIntList-get:
      type: array
      items:
        oneOf:
          -
            type: string
          -
            type: integer
    Order-get:
      type: object
      required:
        - id
        - orderStatus
        - orderLines
      properties:
        id:
          $ref: '#/components/schemas/OrderIdentifier-get'
        orderStatus:
          $ref: '#/components/schemas/OrderStatus-get'
        orderLines:
          $ref: '#/components/schemas/OrderLineList-get'
    Order-post:
      type: object
      required:
        - id
        - orderLineList
      properties:
        id:
          $ref: '#/components/schemas/OrderIdentifier-post'
        orderLineList:
          $ref: '#/components/schemas/OrderLineList-post'
    OrderIdentifier-get:
      type: string
      format: orderidentifier
      pattern: '^[a-f0-9]{8}\-[a-f0-9]{4}\-[a-f0-9]{4}\-[a-f0-9]{4}\-[a-f0-9]{12}$'
    OrderIdentifier-post:
      type: string
      format: orderidentifier
      pattern: '^[a-f0-9]{8}\-[a-f0-9]{4}\-[a-f0-9]{4}\-[a-f0-9]{4}\-[a-f0-9]{12}$'
    OrderLine-post:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/OrderLineIdentifier-post'
    OrderLineIdentifier-post:
      type: string
      format: orderlineidentifier
      pattern: '^[a-f0-9]{8}\-[a-f0-9]{4}\-[a-f0-9]{4}\-[a-f0-9]{4}\-[a-f0-9]{12}$'
    OrderLineList-get:
      type: array
      items:
        $ref: '#/components/schemas/OrderLine-post'
    OrderLineList-post:
      type: array
      items:
        $ref: '#/components/schemas/OrderLine-post'
    OrderStatus-get:
      enum:
        - DRAFT
        - ACCEPTED
        - COMPLETED
      type: string
    Password-get:
      type: string
      format: password
      pattern: '^(?=(.*[a-z]){1,})(?=(.*[A-Z]){1,})(?=(.*[0-9]){1,})(?=(.*[\!@#\$%\^&\*\-_\+\.]){1,})[a-zA-Z0-9\!@#\$%\^&\*\-_\+\.]{6,42}$'
    Password-post:
      type: string
      format: password
      pattern: '^(?=(.*[a-z]){1,})(?=(.*[A-Z]){1,})(?=(.*[0-9]){1,})(?=(.*[\!@#\$%\^&\*\-_\+\.]){1,})[a-zA-Z0-9\!@#\$%\^&\*\-_\+\.]{6,42}$'
    Throwable-get:
      required:
        - message
      type: object
      properties:
        message:
          type: string
    UserAutoincrementIdentifier-get:
      type: integer
    UserAutoincrementIdentifier-post:
      type: integer
    UserWithAddress-get:
      type: object
      required:
        - id
        - address
      properties:
        id:
          $ref: '#/components/schemas/UserWithAddressIdentifier-get'
        address:
          $ref: '#/components/schemas/AddressWithZipcodeCheck-get'
    UserWithAddress-patch:
      type: object
      properties:
        password:
          $ref: '#/components/schemas/Password-post'
    UserWithAddress-post:
      type: object
      required:
        - address
      properties:
        id:
          $ref: '#/components/schemas/UserWithAddressIdentifier-post'
        password:
          $ref: '#/components/schemas/Password-post'
        address:
          $ref: '#/components/schemas/AddressWithZipcodeCheck-post'
    UserWithAddressIdentifier-get:
      type: string
      format: userwithaddressidentifier
      pattern: '^[a-f0-9]{8}\-[a-f0-9]{4}\-[a-f0-9]{4}\-[a-f0-9]{4}\-[a-f0-9]{12}$'
    UserWithAddressIdentifier-post:
      type: string
      format: userwithaddressidentifier
      pattern: '^[a-f0-9]{8}\-[a-f0-9]{4}\-[a-f0-9]{4}\-[a-f0-9]{4}\-[a-f0-9]{12}$'
    UserWithAutoincrementKey-get:
      type: object
      required:
        - id
        - address
        - password
      properties:
        id:
          $ref: '#/components/schemas/UserAutoincrementIdentifier-get'
        address:
          $ref: '#/components/schemas/AddressWithZipcodeCheck-get'
        password:
          $ref: '#/components/schemas/Password-get'
    UserWithAutoincrementKey-patch:
      type: object
      properties:
        password:
          $ref: '#/components/schemas/Password-post'
    UserWithAutoincrementKey-post:
      type: object
      required:
        - address
      properties:
        password:
          $ref: '#/components/schemas/Password-post'
        address:
          $ref: '#/components/schemas/AddressWithZipcodeCheck-post'
    ValidationException-get:
      type: object
      properties:
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
    mixed:
      nullable: true
